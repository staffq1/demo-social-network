{"version":3,"file":"static/js/934.4fc7ceea.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__kwRPQ\",\"posts\":\"MyPosts_posts__XimO1\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__QO1U5\"};","import React from 'react'\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img src='https://i.pinimg.com/736x/b1/4e/9f/b14e9fb7746547c9f1888dc3209108fd.jpg' />\r\n      {props.message}\r\n      <div>\r\n        <span>like:</span>  {props.likesCount}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators'\r\nimport { Textarea } from '../../commen/FormsControls/FormsControls'\r\n// import { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer'\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  let postsElements = props.posts.map(postObj => <Post message={postObj.message} likesCount={postObj.likesCount} key={postObj.message} />)\r\n\r\n  // let newPostElement = React.createRef()\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  // let onPostChange = () => {\r\n  //   let text = newPostElement.current.value\r\n  //   props.updateNewPostText(text)\r\n  // }\r\n\r\n  return (\r\n    <div className={classes.postsBlock}>\r\n      <h2>My posts</h2>\r\n      <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n      <div className={classes.posts}>\r\n        {postsElements}\r\n        {/* <Post message='Hi' likesCount='1'/> */}\r\n        {/* <Post message='i good' likesCount='2'/> */}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name='newPostText' \r\n        validate={[required, maxLength10]}/>\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n      <div>\r\n        <button>Remove</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({\r\n  form: 'ProfileAddNewPostForm'\r\n})(AddNewPostForm)\r\n\r\nexport default MyPosts","import React from 'react'\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer'\r\n\r\nimport MyPosts from './MyPosts'\r\nimport { connect } from \"react-redux\"\r\n\r\n// const MyPostsContainer = (props) => {\r\n\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       {(store) => {\r\n//         let state = store.getState()\r\n\r\n//         let addPost = () => {\r\n//           store.dispatch(addPostActionCreator())\r\n\r\n//           let action = updateNewPostTextActionCreator('')\r\n//           store.dispatch(action) // в диспаче вызываем ф-цию actionCreator которая возвращает объект action у которого есть свойство type\r\n//         }\r\n\r\n//         let onPostChange = (text) => {\r\n//           let action = updateNewPostTextActionCreator(text)\r\n//           store.dispatch(action)\r\n//         }\r\n\r\n//         return <MyPosts updateNewPostText={onPostChange}\r\n//           addPost={addPost}\r\n//           posts={state.profilePage.postsArr}\r\n//           newPostText={state.profilePage.newPostText} />\r\n\r\n//       }\r\n//     }\r\n//     </StoreContext.Consumer>\r\n//   )\r\n// }\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return{\r\n    posts: state.profilePage.postsArr,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n  return{\r\n    // updateNewPostText: (text)=> {\r\n    //   let action = updateNewPostTextActionCreator(text)\r\n    //   dispatch(action)\r\n    // },\r\n    addPost: (newPostText)=>{\r\n      dispatch(addPostActionCreator(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"ProfileInfo_img__65sBC\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__hJMLU\"};","import React from 'react'\r\nimport classes from './ProfileInfo.module.css'\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activeEditeMode = ()=>{\r\n        this.setState({editMode: true})\r\n    }\r\n\r\n    deActiveEditeMode = ()=>{\r\n        \r\n        this.setState({editMode: false})\r\n        this.props.updateStatus(this.state.status)\r\n\r\n    }\r\n\r\n    onStateChange = (e)=>{\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n       \r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onClick={this.activeEditeMode}>{this.props.status || '-----'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        {/* onBlur - когда клик вне фокуса элемента */}\r\n                        <input onChange={this.onStateChange} autoFocus={true} onBlur={this.deActiveEditeMode} value={this.state.status} />\r\n                    \r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React, { useEffect, useState } from 'react'\r\nimport classes from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activeMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deActiveEditeMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return <>\r\n        {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activeMode} >{props.status || '-----'}</span>\r\n            </div>\r\n        }\r\n        {editMode &&\r\n            <div>\r\n                {/* onBlur - когда клик вне фокуса элемента */}\r\n                <input onChange={onStatusChange} onBlur={deActiveEditeMode} autoFocus={true} value={status} />\r\n\r\n            </div>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react'\r\nimport Preloader from '../../commen/Preloader/Preloader'\r\nimport classes from './ProfileInfo.module.css'\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n  if(!profile){\r\n    return <Preloader/>\r\n  } else{\r\n    return (\r\n      <div>\r\n        <div>\r\n          <img className={classes.img} src=\"https://img.fonwall.ru/o/hk/vecher-bereg-kamni-pesok.jpg\" />\r\n        </div>\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n        <div className={classes.descriptionBlock}>\r\n          <img src={profile.photos.large}/>\r\n          <h4>Обо мне: {profile.aboutMe}</h4>\r\n          <h4>Контакты</h4>\r\n          <div>\r\n            <a href={profile.contacts.facebook}>facebook</a>\r\n            <a href={profile.contacts.github}>github</a>\r\n            <a href={profile.contacts.instagram}>instagram</a>\r\n            <a href={profile.contacts.mainLink}>mainLink {profile.contacts.mainLink}</a>\r\n            <a href={profile.contacts.twitter}>twitter</a>\r\n            <a href={profile.contacts.vk}>vk</a>\r\n            <a href={profile.contacts.website}>website</a>\r\n            <a href={profile.contacts.youtube}>youtube</a>\r\n          </div>\r\n          <h4>{profile.fullName}</h4>\r\n          <p>{profile.lookingForAJobDescription}</p>\r\n          avatar + discription\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default ProfileInfo","import React from 'react'\r\nimport MyPosts from './MyPosts/MyPosts'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport classes from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile","import React, { useEffect } from 'react'\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux';\r\nimport { getStatus, updateStatus, userThunkCreator } from '../../redux/profile-reducer'\r\nimport { compose } from 'redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst ProfileContainer = (props)=>  {\r\n\r\n  let navigate = useNavigate()\r\n\r\n  useEffect(()=> {\r\n\r\n    let userId = props.match.params.userId\r\n    \r\n    if (userId === '*') {\r\n      userId = props.authorizedUserId\r\n      if(!userId){\r\n        navigate('/login')\r\n      }\r\n    }\r\n    \r\n    props.userThunkCreator(userId)\r\n    props.getStatus(userId)\r\n  })\r\n\r\n  return <Profile {...props} profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n  \r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { userThunkCreator, getStatus, updateStatus })\r\n)(ProfileContainer)"],"names":["props","className","classes","src","message","likesCount","MyPosts","React","postsElements","posts","map","postObj","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","connect","state","profilePage","postsArr","dispatch","addPostActionCreator","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","profile","photos","large","aboutMe","href","contacts","facebook","github","instagram","mainLink","twitter","vk","website","youtube","fullName","lookingForAJobDescription","Preloader","compose","authorizedUserId","auth","userId","isAuth","userThunkCreator","getStatus","navigate","useNavigate","match","params"],"sourceRoot":""}